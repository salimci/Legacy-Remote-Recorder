EmcStorageRep Recorder Test Cases

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If data is null

Known Input : 
	* rec = RecWrapper
    * field = null
    * values = null
    * data = null

Expected Output :
	* NullReferenceException should occure

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If values string array has one item

Known Input : 
    * rec = RecWrapper
    * field = null
    * values = "2014-09-09"
    * data = EmcStorageRepUnifiedRecorder

Expected Output :
    * IndexOutOfRangeException should occure

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If date time format is "MM/dd/yyyy" + "h:mm:ss t", return 
"yyyy/MM/dd HH:mm:ss" this date format

Known Input : 
    * rec = RecWrapper
    * field = String.Empty
    * values = "7/21/2013", "6:06:25 PM "
    * data = EmcStorageRepUnifiedRecorder

Expected Output :
    * Return 2014/09/09 08:54:15

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario :  If date time format is not expected, return String.Empty

Known Input : 
    * rec = RecWrapper
    * field = null
    * values = "2014/09/09", "08:54:15"
    * data = EmcStorageRepUnifiedRecorder

Expected Output :
    * Return String.Empty

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario :  If recorder is null, return string.Empty

Known Input : 
    * rec = null
    * field = null
    * values = "7/21/2013", "6:06:25 PM"
    * data = null

Expected Output :
    * Return String.Empty

--------------------------------------------------------------------------------

Method Name : OnFieldMatch

Method Description : Matching with regex at the moment file line

Test Scenario : If OnFieldMatch is success but context does not include sourceheaderinfo

Known Input : 
    * match = at the moment pattern

Expected Output :
    * NullReferenceException should occurence

--------------------------------------------------------------------------------

Method Name : OnFieldMatch

Method Description : Matching with regex at the moment file line

Test Scenario : If OnFieldMatch is not success

Known Input : 
    * match = at the moment pattern

Expected Output :
    * NextInstruction.Skip should return

--------------------------------------------------------------------------------

Method Name : OnFieldMatch

Method Description : Matching with regex at the moment file line

Test Scenario : If OnFieldMatch is success but context is null

Known Input : 
    * match = at the moment pattern

Expected Output :
    * NullReferenceException should occurence

--------------------------------------------------------------------------------

Method Name : OnFieldMatch

Method Description : Matching with regex at the moment file line

Test Scenario : If Match is success, for wrong input

Known Input : 
    * match = at the moment pattern

Expected Output :
    * NextInstruction.Return should return

--------------------------------------------------------------------------------

Method Name : OnFieldMatch

Method Description : Matching with regex at the moment file line

Test Scenario : If Match is success, for true input

Known Input : 
    * match = at the moment pattern

Expected Output :
    * NextInstruction.Return should return

--------------------------------------------------------------------------------

Method Name : CreateHeaderSeparator

Method Description : Create header separator with regex

Test Scenario : If regex is wrong for header

Known Input :
    * regex = "^([^\s]+)\s*$"

Expected Output :
    * Expected and actual values are not equal

--------------------------------------------------------------------------------

Method Name : CreateHeaderSeparator

Method Description : Create header separator with regex

Test Scenario : If regex is true for header

Known Input : Expected regex

Expected Output :
    * return expected regex

--------------------------------------------------------------------------------

Method Name : CreateFieldSeparator

Method Description : Create field separator with regex

Test Scenario : If regex is wrong for field

Known Input :
    * regex = "^([^\s]+)\s*$"

Expected Output :
    * Expected and actual values are not equal

--------------------------------------------------------------------------------

Method Name : CreateFieldSeparator

Method Description : Create header separator with regex

Test Scenario : If regex is true for field

Known Input :
    * Expected regex

Expected Output :
    * Return expected regex

--------------------------------------------------------------------------------

Method Name : GetHeaderText

Method Description : Return string.Empty

Test Scenario : If context is null

Known Input :
    * context = null

Expected Output :
    * string.Empty should return

--------------------------------------------------------------------------------

Method Name : GetHeaderText

Method Description : Return string.Empty

Test Scenario : If context is not null

Known Input :
    * context = FileLineRecorderContext(_emcStorageRepUnifiedRecorder)

Expected Output :
    * string.Empty should return

--------------------------------------------------------------------------------

Method Name : CreateContextInstance

Method Description : Create new EmcStorageRepUnifiedRecorderContext

Test Scenario : If context instance is created

Known Input :
    * object[] ctxArgs = {String.Empty};

Expected Output :
    * Return EmcStorageRepUnifiedRecorderContext

--------------------------------------------------------------------------------