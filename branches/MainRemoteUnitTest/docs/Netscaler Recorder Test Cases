Netscaler Recorder Test Cases

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If data is null

Known Input : 
	* rec = RecWrapper
    * field = null
    * values = null
    * data = null

Expected Output :
	* NullReferenceException should occure

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If date time format is "yyyy-M-d" +  "H:m:s", return "yyyy/MM/dd
 HH:mm:ss" this date format

Known Input :
	* rec = RecWrapper
    * field = String.Empty
    * values = {"2014-09-09", "08:54:15"}
    * data = Ftp2012UnifiedRecorder

Expected Output :
	* Return 2014/09/09 08:54:15

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If date time format is "y-M-d" +  "H:m:s", return "yyyy/MM/dd
 HH:mm:ss" this date format

Known Input :
    * rec = RecWrapper
    * field = String.Empty
    * values = {"2014-09-09", "08:54:15"}
    * data = Ftp2012UnifiedRecorder

Expected Output :
    * Return 2014/09/09 08:54:15

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If date time format is "yyyy/M/d" +  "H:m:s", return "yyyy/MM/dd
 HH:mm:ss" this date format

Known Input :
    * rec = RecWrapper
    * field = String.Empty
    * values = {"2014/09/09", "08:54:15"}
    * data = Ftp2012UnifiedRecorder

Expected Output :
    * Return 2014/09/09 08:54:15

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If date time format is "y/M/d" +  "H:m:s", return "yyyy/MM/dd
 HH:mm:ss" this date format

Known Input :
    * rec = RecWrapper
    * field = String.Empty
    * values = {"2014/09/09", "08:54:15"}
    * data = Ftp2012UnifiedRecorder

Expected Output :
    * Return 2014/09/09 08:54:15

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If date time format is not expected, return String.Empty

Known Input : 
    * rec = RecWrapper
    * field = null
    * values = "2014_09_09 08:54:15"
    * data = Ftp2012UnifiedRecorder

Expected Output :
    * Return String.Empty

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If recorder is null, return string.Empty

Known Input :
    * rec = null
    * field = null
    * values = "2014-09-09 08:54:15"
    * data = null

Expected Output :
    * Return String.Empty

--------------------------------------------------------------------------------

Method Name : Convert2Date

Method Description : Return given date time values as converted database format

Test Scenario : If values string array has one item

Known Input :
    * rec = RecWrapper
    * field = null
    * values = "2014-09-09"
    * data = null

Expected Output :
    * IndexOutOfRangeException should occure

--------------------------------------------------------------------------------

Method Name : HttpDecode

Method Description : Return given values as http decoded object

Test Scenario : If values is null, return string.Empty

Known Input :
    * rec = null
    * field = null
    * values = null
    * data = null

Expected Output :
    * Return String.Empty

--------------------------------------------------------------------------------

Method Name : HttpDecode

Method Description : Return given values as http decoded object

Test Scenario : If values is empty, return string.Empty

Known Input :
    * rec = null
    * field = null
    * values = String.Empty
    * data = null

Expected Output :
    * Return String.Empty

--------------------------------------------------------------------------------

Method Name : HttpDecode

Method Description : Return given values as http decoded object

Test Scenario : If values's length is 1, return first element in values array

Known Input :
    * rec = null
    * field = nullnull
    * values = {"Lorem"}
    * data = null

Expected Output :
    * Return "Lorem"

--------------------------------------------------------------------------------

Method Name : HttpDecode

Method Description : Return given values as http decoded object

Test Scenario : If values's length is bigger than 1, return first element in values array

Known Input :
    * rec = null
    * field = null
    * values = {"Lorem", "ipsum", "dolor"}
    * data = null

Expected Output :
    * Return "Lorem"

--------------------------------------------------------------------------------

Method Name : InputTextType

Method Description : Determined the input record type

Test Scenario : If context is null

Known Input :
    * context = null
    * error = null

Expected Output :
    * NullReferenceException should occure

--------------------------------------------------------------------------------

Method Name : InputTextType

Method Description : Determined the input record type

Test Scenario : If context.InputRecord is null

Known Input :
    * context = RecorderContext with null InputRecord
    * error = null

Expected Output :
    * RecordInputType.Unknown should return

--------------------------------------------------------------------------------

Method Name : InputTextType

Method Description : Determined the input record type

Test Scenario : If context.InputRecord.Lentgh() equals zero

Known Input :
    * context = RecorderContext with InputRecord
    * error = null

Expected Output :
    * RecordInputType.Comment should return

--------------------------------------------------------------------------------

Method Name : InputTextType

Method Description : Determined the input record type

Test Scenario : If context.InputRecord.Lentgh() is not zero

Known Input :
    * context = RecorderContext with InputRecord
    * error = null

Expected Output :
    * RecordInputType.Record should return

--------------------------------------------------------------------------------

Method Name : CreateHeaderSeparator

Method Description : Create header separator with regex

Test Scenario : If regex is wrong for header

Known Input :
    * regex = "^([^\s]+)\s*$"

Expected Output :
    * Expected and actual values are not equal

--------------------------------------------------------------------------------

Method Name : CreateHeaderSeparator

Method Description : Create header separator with regex

Test Scenario : If regex is true for header

Known Input : Expected regex

Expected Output :
    * return expected regex

--------------------------------------------------------------------------------

Method Name : CreateFieldSeparator

Method Description : Create field separator with regex

Test Scenario : If regex is wrong for field

Known Input :
    * regex = "^([^\s]+)\s*$"

Expected Output :
    * Expected and actual values are not equal

--------------------------------------------------------------------------------

Method Name : CreateFieldSeparator

Method Description : Create header separator with regex

Test Scenario : If regex is true for field

Known Input :
    * Expected regex

Expected Output :
    * Return expected regex

--------------------------------------------------------------------------------

Method Name : GetHeaderText

Method Description : Return string.Empty

Test Scenario : If context is null

Known Input :
    * context = null

Expected Output :
    * string.Empty should return

--------------------------------------------------------------------------------

Method Name : GetHeaderText

Method Description : Return string.Empty

Test Scenario : If context is not null

Known Input :
    * context = FileLineRecorderContext(_ftp2012UnifiedRecorder)

Expected Output :
    * string.Empty should return

--------------------------------------------------------------------------------

Method Name : OnBeforeSetData

Method Description : Ready for process data

Test Scenario : If context is null

Known Input :
    * context = null

Expected Output :
    * NullReferenceException should occure

--------------------------------------------------------------------------------

Method Name : OnBeforeSetData

Method Description : Ready for process data

Test Scenario : If context is not null

Known Input :
    * context = NetscalerUnifiedRecorder

Expected Output :
    * NextInstruction.Do should occure

--------------------------------------------------------------------------------